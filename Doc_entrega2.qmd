---
title: "Entrega 2"
author: 
  - name: Ángel Álamo
  - name: Juanjo Doblas
  - name: Óscar Vanrell 
format: html
editor: visual
execute:
  echo: false
---

# Gráficos de la base de datos mpg

En esta práctica representaremos la información de la base de datos mpg a partir de gráficos utilizando ggplot. Primero cargaremos la librería tidyverse y la tabla de datos.

```{r cargar tidyverse, include = FALSE, warning = FALSE}
library(tidyverse)
```

```{r mostrar variables}
mpg %>% glimpse

```

Convertimos todas las variables 'character' en factor.

```{r character a factor}
mpg = mpg %>%
  mutate(across(where(is.character), as.factor), .keep = "all")

mpg %>% glimpse
```

## 1. Dibujad un gráfico que permita visualizar el número de vehículos de cada fabricante del conjunto de datos.

```{r num vehiculos por fabricante, fig.width = 10, fig.height = 5}

mpg %>%
  ggplot(aes(x = manufacturer, fill = manufacturer)) +
  geom_bar() +
  labs(x = "Fabricante", y = "Núm. de vehículos") + 
  theme_bw() +
  guides(fill = guide_legend(title = "Fabricante")) +
  theme(axis.title = element_text(face = "bold"),
        legend.title = element_text(size = 10, face = "bold"))
  

```

## 2. Dibujad un gráfico para mostrar el rendimiento medio en ciudad para cada clase.

```{r rendimiento ciudad por clases, fig.width = 7, fig.height = 4}

mpg %>% 
  group_by(class) %>% 
  summarise(cty_media = mean(cty), .groups = "drop") %>%
  ggplot() + 
  geom_col(aes(x = class, y = cty_media, fill = class)) +
  labs(x = "Tipo de vehículo", y = "Rend. medio en ciudad (mpg) ") +
  theme_bw() + 
  guides(fill = guide_legend(title = "Clases de vehículos")) +
  theme(axis.text = element_text(face = "bold"),
        axis.title = element_text(face = "bold"),
        legend.title = element_text(size = 10, face = "bold"))



```

## 3. Construid un gráfico para mostrar el rendimiento medio en ciudad para cada clase y tipo de tracción simultáneamente.

```{r rendimiento ciudad por clases y tracción, fig.width = 10, fig.height = 4}

mpg %>% 
  group_by(class, drv) %>% 
  summarise(cty_media = mean(cty), .groups = "drop") %>%
  unite(col = "class_drv", c(class, drv), sep = " - ") %>%
  ggplot() + 
  geom_col(aes(x = class_drv, y = cty_media, fill = class_drv), alpha = 0.8,
           position = "identity", na.rm = TRUE) +
  labs(x = "Tipo de vehículo y tracción", y = "Rend. medio en ciudad (mpg) ") +
  theme_bw() +
  theme(axis.text = element_text(size = 6)) +
  guides(fill = guide_legend(title = "Vehículo - Tracción")) +
  theme(axis.title = element_text(face = "bold"),
        legend.title = element_text(size = 10, face = "bold"))


```
## 4. Utilizad un gráfico para mostrar la relación entre el tamaño del motor y el rendimiento en carretera, para cada clase de vehículo. ¿Qué podéis observar?

```{r relacion tamaño motor y rendimiento carretera, fig.width = 13, fig.height = 3}

mpg %>% 
  select(displ, hwy, class) %>% 
  relocate(class, .before = displ) %>%
  group_by(class) %>% 
  ggplot() + 
  geom_point(aes(x = displ, y = hwy, color = class), position = "identity",
             na.rm = TRUE) +
  facet_grid(.~class) +
  scale_fill_manual(values = c("green", "blue", "red",
                               "darkorange","purple","cyan4", "grey")) +
  labs(x = "Tamaño del motor", y = "Rend. en carretera (en mpg)") +
  guides(fill = guide_legend(title = "Tipo de vehículo")) +
  theme_bw() +
  theme(axis.title = element_text(face = "bold"),
        legend.title = element_text(size = 10, face = "bold"))


```

## 5. Comparad la distribución del rendimiento en ciudad para distintos tipos de tracción.

```{r distribucion rendimiento ciudad por tipo de traccion, fig.width = 10, fig.height = 4}

mpg %>%
  select(drv, cty) %>% 
  group_by(drv) %>% 
  ggplot() + 
  geom_histogram(aes(x = cty, fill = drv), alpha = 0.5, position = "identity",
                 na.rm = TRUE) +
  facet_grid(.~drv) +
  scale_fill_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "Rendimiento en ciudad", y = "Frec. absoluta") +
  theme_bw() +
  guides(fill = guide_legend(title = "Traccción")) +
  theme(axis.title = element_text(face = "bold"),
        legend.title = element_text(size = 10, face = "bold"))
  

```

```{r comentarios}

# Comentar ejercicio 4

```

